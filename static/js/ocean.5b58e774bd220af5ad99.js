webpackJsonp([1],{"41Iu":function(n,e){},DH55:function(n,e,t){n.exports=t.p+"static/img/LOGO.ba4e886.png"},DUXs:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("eslX"),i={render:function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("div",{staticClass:"app-header",class:{"transparent-header":n.isTransparentHead}},[a("div",{staticClass:"app-header-wrap"},[a("div",{staticClass:"github right"},[a("icon",{staticClass:"github-icon",attrs:{name:"github"}})],1),n._v(" "),a("router-link",{staticClass:"app-logo left",attrs:{to:{name:"index"}}},[a("img",{attrs:{src:t("DH55"),alt:"NS4 Gear"}}),n._v(" "),a("span",{staticClass:"app-name"},[n._v("NS4 Gear")])]),n._v(" "),a("ul",{staticClass:"left"},[a("li",[a("router-link",{staticClass:"cur",attrs:{to:{name:"index"},exact:""}},[n._v("首页")])],1),n._v(" "),a("li",[a("router-link",{attrs:{to:{name:""},exact:""}},[n._v("NS框架")])],1),n._v(" "),a("li",{staticClass:"more"},[a("router-link",{attrs:{to:{name:""}}},[n._v("组件服务")])],1),n._v(" "),a("li",{staticClass:"more"},[a("router-link",{attrs:{to:{name:""}}},[n._v("下载")])],1),n._v(" "),a("li",{staticClass:"more"},[a("router-link",{attrs:{to:{name:""}}},[n._v("文档")])],1),n._v(" "),a("li",{staticClass:"more"},[a("router-link",{attrs:{to:{name:""}}},[n._v("联系我们")])],1)])],1)])},staticRenderFns:[]};var o=t("VU/8")({name:"AppHeader",computed:{isTransparentHead:function(){return"index"===this.$route.name}}},i,!1,function(n){t("41Iu")},"data-v-011ee681",null).exports,s=t("yNIu"),r=t.n(s),c=t("uREw"),l=t.n(c),v={name:"Banner",data:function(){return{startAnimate:!1}},mounted:function(){this.loadScript("/static/js/three.min.js",this.initCanvas)},beforeDestroy:function(){this.startAnimate=!1},methods:{loadScript:function(n,e){function t(){try{e()}catch(e){var n=document.getElementById("bg");n.style.background="url(/static/img/ocean_bg.png) no-repeat center",n.style.backgroundSize="cover"}}if(document.getElementById("three"))t();else{var a=document.createElement("script");a.type="text/javascript",a.src=n,a.id="three",a.onload=t,document.body.appendChild(a)}},initCanvas:function(){var n=this,e=window.THREE,t=document.getElementById("bg"),a=null,i=null,o=null,s=null,c=null,v=null,d=0;function m(){a=window.innerWidth>980?window.innerWidth:980,i=window.innerHeight<.389*a?.389*a:window.innerHeight}m(),(o=new e.WebGLRenderer({antialias:!0})).setSize(a,i),t.appendChild(o.domElement),o.setClearColor(15658734),c=new e.Scene,(s=new e.PerspectiveCamera(45,a/i,1,2e3)).position.set(0,0,360),s.lookAt(new e.Vector3(0,0,0)),c.add(s);var p={iTime:{value:1},iResolution:{value:new e.Vector2(1*a,1*i)}},u=new e.ShaderMaterial({uniforms:p,vertexShader:l.a,fragmentShader:r.a}),f=new e.PlaneBufferGeometry(a,i),_=new e.Mesh(f,u);c.add(_),o.render(c,s),v=new e.Clock,this.startAnimate=!0,function e(){n.startAnimate&&requestAnimationFrame(e),d=v.getDelta(),p.iTime.value+=d,o.render(c,s)}(),window.addEventListener("resize",function(){m(),s.aspect=a/i,s.updateProjectionMatrix(),o.setSize(a,i),p.iResolution.value=new e.Vector2(1*a,1*i)})}}},d={render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"banner"},[t("div",{attrs:{id:"bg"}}),n._v(" "),t("div",{staticClass:"content"},[n._m(0),n._v(" "),t("ul",{staticClass:"modules"},[t("li",{staticClass:"item"},[t("div",{staticClass:"icon"},[t("div",{staticClass:"icon-wrap"},[t("icon",{staticClass:"module-icon",attrs:{name:"log"}})],1)]),n._v(" "),t("div",{staticClass:"text"},[t("h3",[n._v("日志查询")]),n._v(" "),t("p",{staticClass:"desc"},[n._v("用于日志采集、存储、分析展现")]),n._v(" "),t("p",[t("router-link",{attrs:{to:{name:""}}},[n._v("了解更多")])],1)])]),n._v(" "),t("li",{staticClass:"item"},[t("div",{staticClass:"icon"},[t("div",{staticClass:"icon-wrap"},[t("icon",{staticClass:"module-icon",attrs:{name:"id"}})],1)]),n._v(" "),t("div",{staticClass:"text"},[t("h3",[n._v("ID 生成器")]),n._v(" "),t("p",{staticClass:"desc"},[n._v("使用有意义、有序的序列号生成全局唯一ID")]),n._v(" "),t("p",[t("router-link",{attrs:{to:{name:""}}},[n._v("了解更多")])],1)])]),n._v(" "),t("li",{staticClass:"item"},[t("div",{staticClass:"icon"},[t("div",{staticClass:"icon-wrap"},[t("icon",{staticClass:"module-icon",attrs:{name:"calendar"}})],1)]),n._v(" "),t("div",{staticClass:"text"},[t("h3",[n._v("节假日管理")]),n._v(" "),t("p",{staticClass:"desc"},[n._v("维护节假日，并提供接口判断某天是否节假日")]),n._v(" "),t("p",[t("router-link",{attrs:{to:{name:""}}},[n._v("了解更多")])],1)])])])])])},staticRenderFns:[function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"main"},[e("div",{attrs:{id:"mainText"}},[e("h1",[this._v("NS4 Gear")]),this._v(" "),e("p",[this._v("方便、快捷、高效的开源框架")])])])}]};var m={name:"Ocean",components:{AppHeader:o,Banner:t("VU/8")(v,d,!1,function(n){t("b3wZ")},"data-v-64847d8e",null).exports}},p={render:function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"ocean"},[e("div",{staticClass:"header"},[e("AppHeader")],1),this._v(" "),e("Banner")],1)},staticRenderFns:[]};var u={routes:[{path:"/",name:"index",component:t("VU/8")(m,p,!1,function(n){t("HfEF")},"data-v-3cdd51f2",null).exports}]},f=Object(a.a)("index",u),_=f.app;f.router.onReady(function(){return _.$mount("#app")})},HfEF:function(n,e){},b3wZ:function(n,e){},uREw:function(n,e){n.exports="void main()\n{\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  gl_Position = projectionMatrix * mvPosition;\n}\n"},yNIu:function(n,e){n.exports='uniform float iTime;\nuniform vec2 iResolution;\nuniform sampler2D iChannel0;\nvec2 iMouse = vec2(0.0, 0.0);\n\n/*\n * "Seascape" by Alexander Alekseev aka TDM - 2014\n * License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n * Contact: tdmaav@gmail.com\n */\n\nconst int NUM_STEPS = 8;\nconst float PI\t \t= 3.141592;\nconst float EPSILON\t= 1e-3;\n#define EPSILON_NRM (0.1 / iResolution.x)\n\n// sea\nconst int ITER_GEOMETRY = 3;\nconst int ITER_FRAGMENT = 5;\nconst float SEA_HEIGHT = 0.6;\nconst float SEA_CHOPPY = 4.0;\nconst float SEA_SPEED = 0.8;\nconst float SEA_FREQ = 0.16;\nconst vec3 SEA_BASE = vec3(0.1,0.19,0.22);\nconst vec3 SEA_WATER_COLOR = vec3(0.8,0.9,0.6);\n#define SEA_TIME (1.0 + iTime * SEA_SPEED)\nconst mat2 octave_m = mat2(1.6,1.2,-1.2,1.6);\n\n// math\nmat3 fromEuler(vec3 ang) {\n\tvec2 a1 = vec2(sin(ang.x),cos(ang.x));\n    vec2 a2 = vec2(sin(ang.y),cos(ang.y));\n    vec2 a3 = vec2(sin(ang.z),cos(ang.z));\n    mat3 m;\n    m[0] = vec3(a1.y*a3.y+a1.x*a2.x*a3.x,a1.y*a2.x*a3.x+a3.y*a1.x,-a2.y*a3.x);\n\tm[1] = vec3(-a2.y*a1.x,a1.y*a2.y,a2.x);\n\tm[2] = vec3(a3.y*a1.x*a2.x+a1.y*a3.x,a1.x*a3.x-a1.y*a3.y*a2.x,a2.y*a3.y);\n\treturn m;\n}\nfloat hash( vec2 p ) {\n\tfloat h = dot(p,vec2(127.1,311.7));\n    return fract(sin(h)*43758.5453123);\n}\nfloat noise( in vec2 p ) {\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\tvec2 u = f*f*(3.0-2.0*f);\n    return -1.0+2.0*mix( mix( hash( i + vec2(0.0,0.0) ),\n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ),\n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\n// lighting\nfloat diffuse(vec3 n,vec3 l,float p) {\n    return pow(dot(n,l) * 0.4 + 0.6,p);\n}\nfloat specular(vec3 n,vec3 l,vec3 e,float s) {\n    float nrm = (s + 8.0) / (PI * 8.0);\n    return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\n}\n\n// sky\nvec3 getSkyColor(vec3 e) {\n    e.y = max(e.y,0.0);\n    return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);\n}\n\n// sea\nfloat sea_octave(vec2 uv, float choppy) {\n    uv += noise(uv);\n    vec2 wv = 1.0-abs(sin(uv));\n    vec2 swv = abs(cos(uv));\n    wv = mix(wv,swv,wv);\n    return pow(1.0-pow(wv.x * wv.y,0.65),choppy);\n}\n\nfloat map(vec3 p) {\n    float freq = SEA_FREQ;\n    float amp = SEA_HEIGHT;\n    float choppy = SEA_CHOPPY;\n    vec2 uv = p.xz; uv.x *= 0.75;\n\n    float d, h = 0.0;\n    for(int i = 0; i < ITER_GEOMETRY; i++) {\n    \td = sea_octave((uv+SEA_TIME)*freq,choppy);\n    \td += sea_octave((uv-SEA_TIME)*freq,choppy);\n        h += d * amp;\n    \tuv *= octave_m; freq *= 1.9; amp *= 0.22;\n        choppy = mix(choppy,1.0,0.2);\n    }\n    return p.y - h;\n}\n\nfloat map_detailed(vec3 p) {\n    float freq = SEA_FREQ;\n    float amp = SEA_HEIGHT;\n    float choppy = SEA_CHOPPY;\n    vec2 uv = p.xz; uv.x *= 0.75;\n\n    float d, h = 0.0;\n    for(int i = 0; i < ITER_FRAGMENT; i++) {\n    \td = sea_octave((uv+SEA_TIME)*freq,choppy);\n    \td += sea_octave((uv-SEA_TIME)*freq,choppy);\n        h += d * amp;\n    \tuv *= octave_m; freq *= 1.9; amp *= 0.22;\n        choppy = mix(choppy,1.0,0.2);\n    }\n    return p.y - h;\n}\n\nvec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {\n    float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);\n    fresnel = pow(fresnel,3.0) * 0.65;\n\n    vec3 reflected = getSkyColor(reflect(eye,n));\n    vec3 refracted = SEA_BASE + diffuse(n,l,80.0) * SEA_WATER_COLOR * 0.12;\n\n    vec3 color = mix(refracted,reflected,fresnel);\n\n    float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\n    color += SEA_WATER_COLOR * (p.y - SEA_HEIGHT) * 0.18 * atten;\n\n    color += vec3(specular(n,l,eye,60.0));\n\n    return color;\n}\n\n// tracing\nvec3 getNormal(vec3 p, float eps) {\n    vec3 n;\n    n.y = map_detailed(p);\n    n.x = map_detailed(vec3(p.x+eps,p.y,p.z)) - n.y;\n    n.z = map_detailed(vec3(p.x,p.y,p.z+eps)) - n.y;\n    n.y = eps;\n    return normalize(n);\n}\n\nfloat heightMapTracing(vec3 ori, vec3 dir, out vec3 p) {\n    float tm = 0.0;\n    float tx = 1000.0;\n    float hx = map(ori + dir * tx);\n    if(hx > 0.0) return tx;\n    float hm = map(ori + dir * tm);\n    float tmid = 0.0;\n    for(int i = 0; i < NUM_STEPS; i++) {\n        tmid = mix(tm,tx, hm/(hm-hx));\n        p = ori + dir * tmid;\n    \tfloat hmid = map(p);\n\t\tif(hmid < 0.0) {\n        \ttx = tmid;\n            hx = hmid;\n        } else {\n            tm = tmid;\n            hm = hmid;\n        }\n    }\n    return tmid;\n}\n\n// main\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    float time = iTime * 0.1 + iMouse.x*0.01;\n\n    // ray\n    vec3 ang = vec3(sin(time*3.0)*0.1,sin(time)*0.2+0.3,time);\n    vec3 ori = vec3(0.0,3.5,time*5.0);\n    vec3 dir = normalize(vec3(uv.xy,-2.0)); dir.z += length(uv) * 0.15;\n    dir = normalize(dir) * fromEuler(ang);\n\n    // tracing\n    vec3 p;\n    heightMapTracing(ori,dir,p);\n    vec3 dist = p - ori;\n    vec3 n = getNormal(p, dot(dist,dist) * EPSILON_NRM);\n    vec3 light = normalize(vec3(0.0,1.0,0.8));\n\n    // color\n    vec3 color = mix(\n        getSkyColor(dir),\n        getSeaColor(p,n,light,dir,dist),\n    \tpow(smoothstep(0.0,-0.05,dir.y),0.3));\n\n    // post\n\tgl_FragColor = vec4(pow(color,vec3(0.75)), 1.0);\n}\n'}},["DUXs"]);
//# sourceMappingURL=ocean.5b58e774bd220af5ad99.js.map